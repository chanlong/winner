<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.winner.commons</groupId>
	<artifactId>winner-commons</artifactId>

	<version>1.0.0</version>
	<packaging>pom</packaging>

	<name>winner-commons</name>
	<url>https://github.com/chanlong/winner</url>
	<description>公共组件聚合模块</description>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<tag>master</tag>
		<url>git@github.com:chanlong/winner.git</url>
		<connection>scm:git:git@github.com:chanlong/winner.git</connection>
		<developerConnection>scm:git:git@github.com:chanlong/winner.git</developerConnection>
	</scm>

	<developers>
		<developer>
			<name>chanlong</name>
			<email>chenl1@winnerinf.com</email>
			<organization>winnerinf.com</organization>
		</developer>
	</developers>

	<modules>
		<module>winner-commons-base</module>
		<module>winner-commons-word</module>
		<module>winner-commons-sample</module>
        <module>winner-commons-template</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>

		<!-- maven build 插件 -->
		<maven.deploy.version>2.8.2</maven.deploy.version>
		<maven.source.version>3.2.0</maven.source.version>
		<maven.javadoc.version>3.2.0</maven.javadoc.version>
		<maven.release.version>2.5.3</maven.release.version>
		<maven.compiler.version>3.8.1</maven.compiler.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<!-- SpringBoot & SpringCloud & SpringCloudAlibaba -->
		<spring-boot.version>2.3.1.RELEASE</spring-boot.version>

		<!-- docker build 插件 -->
		<docker.plugin.version>0.32.0</docker.plugin.version>
		<docker.registry>harbor.chanlong.online</docker.registry>
		<docker.host>tcp://harbor.chanlong.online:2376</docker.host>
		<docker.username>admin</docker.username>
		<docker.password>J978jjkk</docker.password>
		<docker.namespace>cesweb</docker.namespace>
		<docker.skip>true</docker.skip>

		<!-- 全局依赖版本配置 -->
		<hutool.version>5.5.8</hutool.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		
		<!--hutool -->
		<dependency>
			<groupId>cn.hutool</groupId>
			<artifactId>hutool-all</artifactId>
			<version>${hutool.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<!--Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>

		<!--测试依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<!--spring boot 公共版本定义 -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.winner.commons</groupId>
				<artifactId>winner-commons-base</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.winner.commons</groupId>
				<artifactId>winner-commons-word</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.winner.commons</groupId>
				<artifactId>winner-commons-template</artifactId>
				<version>${project.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<repositories>
		<!--阿里云代理 -->
		<repository>
			<id>aliyun</id>
			<name>aliyun</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public</url>
		</repository>

		<!-- gitee私服地址 -->
		<repository>
			<id>maven-gitee</id>
			<url>https://gitee.com/clmaven/public-repo/raw/master/public/</url>
		</repository>

		<!-- chanlong私服地址 -->
		<repository>
			<id>winner-release</id>
			<url>http://106.12.5.251:8081/repository/maven-releases/</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>aliyun-plugin</id>
			<url>https://maven.aliyun.com/repository/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<finalName>${project.name}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<pluginManagement>
			<plugins>
				<!--spring boot 默认插件 -->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!--maven docker 打包插件 -->
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker.plugin.version}</version>
					<configuration>
						<!-- 这一部分是为了实现对远程docker容器的控制 -->
						<!-- docker主机远程API地址 -->
						<dockerHost>${docker.host}</dockerHost>
						<!-- docker远程访问所需证书路径,如果docker远程主机没有启用TLS验证则不需要配证书 -->
						<certPath>${project.basedir}/src/main/docker/ssh</certPath>

						<!-- 这一部分是为了实现docker镜像的构建和推送 -->
						<!-- registry地址,用于推送,拉取镜像,此处使用Harbor本地化仓库 -->
						<registry>${docker.registry}</registry>
						<authConfig>
							<push>
								<username>${docker.username}</username>
								<password>${docker.password}</password>
							</push>
						</authConfig>

						<images>
							<image>
								<!--镜像名(含版本号) -->
								<name>${docker.registry}/${docker.namespace}/${project.name}:${project.version}</name>
								<!--镜像build相关配置 -->
								<build>
									<dockerFileDir>${project.basedir}/src/main/docker</dockerFileDir>
									<assembly>
										<descriptor>docker-assembly.xml</descriptor>
									</assembly>
								</build>
							</image>
						</images>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<!--install时跳过test -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<!--代码编译指定版本插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.version}</version>
				<configuration>
					<target>${maven.compiler.target}</target>
					<source>${maven.compiler.source}</source>
					<encoding>UTF-8</encoding>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<!-- 环境标识，需要与配置文件的名称相对应 -->
				<profiles.active>dev</profiles.active>
			</properties>
			<activation>
				<!-- 默认环境 -->
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<profiles.active>test</profiles.active>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<profiles.active>prod</profiles.active>
			</properties>
		</profile>
		<profile>
			<id>winner-release</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>${maven.compiler.version}</version>
						<configuration>
							<source>${maven.compiler.source}</source>
							<target>${maven.compiler.target}</target>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-release-plugin</artifactId>
						<version>${maven.release.version}</version>
						<configuration>
							<autoVersionSubmodules>true</autoVersionSubmodules>
							<useReleaseProfile>false</useReleaseProfile>
							<releaseProfiles>release</releaseProfiles>
							<goals>deploy</goals>
						</configuration>
					</plugin>
					<!--生成Source jar文件 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>${maven.source.version}</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!--生成Javadoc，关闭doclint,避免注解检查不通过 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${maven.javadoc.version}</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<doclint>none</doclint>
									<failOnError>false</failOnError>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>

			<!--mvn clean deploy Maven私服 -->
			<distributionManagement>
				<repository>
					<id>cesweb-release</id>
					<url>http://106.12.5.251:8081/repository/maven-releases/</url>
				</repository>
				<snapshotRepository>
					<id>cesweb-snapshots</id>
					<url>http://106.12.5.251:8081/repository/maven-snapshots/</url>
				</snapshotRepository>
			</distributionManagement>
		</profile>
	</profiles>

</project>
